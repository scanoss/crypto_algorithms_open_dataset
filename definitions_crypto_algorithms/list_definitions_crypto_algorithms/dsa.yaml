# SPDX-FileContributor: [Author Name(s)] <[Optional: Email Address(es)]>
#
# SPDX-License-Identifier: CC0-1.0

algorithmId: dsa
algorithmName: Digital Signature Algorithm
securityStrength: '128'
keywords:
    - ossl_dsa_
    - DSA_set_method
    - DSA_set_ex_data
    - DSA_print
    - DSA_SIG_new
    - DSA_do_sign
    - dsa_finish
    - DSA_bits
    - dsa_pkey_ctrl
    - dsa_keygen_pairwise_test
    - pkey_dsa_
    - dsa_param_print
    - dsa_pub_print
    - DSA_meth_
    - DSA_set_default_method
    - dsa_sign_
    - DSA_up_ref
    - DSA_set0_key
    - dsa_init
    - dsa_mod_inverse_fermat
    - DSA_generate_
    - dsa_pub_encode
    - ossl_ffc_params_cmp
    - DSAparams_dup
    - EVP_PKEY_CTX_set_dsa_paramgen_md
    - dsa_priv_decode
    - int_dsa_free
    - DSA_clear_flags
    - DSA_verify
    - i2d_DSAparams
    - DSA_test_flags
    - dsa_priv_encode
    - dsa_copy_parameters
    - '#include <openssl/dsa.h>'
    - '.getInstance("DSA")'
    - '.getInstance("SHA256withDSA")'
    - crypto.generateKeyPairSync('dsa'
    - dsa.Generate
    - crypto/dsa
    - dsa.Sign
    - OPENSSL_KEYTYPE_DSA
    - from Crypto.PublicKey import DSA
    - dsa.DSA
    - dsa.sign
    - dsa.verify
    - KeyPairGenerator.generateKeyPair
    - java.security.spec.DSAParameterSpec
